// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	domain "github.com/lailaweil/billemailer/api/domain"
	errors "github.com/lailaweil/billemailer/api/errors"

	mock "github.com/stretchr/testify/mock"
)

// TemplateService is an autogenerated mock type for the TemplateService type
type TemplateService struct {
	mock.Mock
}

// CreateTemplate provides a mock function with given fields: template
func (_m *TemplateService) CreateTemplate(template *domain.Template) (*domain.Template, *errors.Error) {
	ret := _m.Called(template)

	var r0 *domain.Template
	if rf, ok := ret.Get(0).(func(*domain.Template) *domain.Template); ok {
		r0 = rf(template)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.Template)
		}
	}

	var r1 *errors.Error
	if rf, ok := ret.Get(1).(func(*domain.Template) *errors.Error); ok {
		r1 = rf(template)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*errors.Error)
		}
	}

	return r0, r1
}

// DeleteTemplate provides a mock function with given fields: id
func (_m *TemplateService) DeleteTemplate(id string) (*domain.Template, *errors.Error) {
	ret := _m.Called(id)

	var r0 *domain.Template
	if rf, ok := ret.Get(0).(func(string) *domain.Template); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.Template)
		}
	}

	var r1 *errors.Error
	if rf, ok := ret.Get(1).(func(string) *errors.Error); ok {
		r1 = rf(id)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*errors.Error)
		}
	}

	return r0, r1
}

// GetAllTemplates provides a mock function with given fields:
func (_m *TemplateService) GetAllTemplates() ([]*domain.Template, *errors.Error) {
	ret := _m.Called()

	var r0 []*domain.Template
	if rf, ok := ret.Get(0).(func() []*domain.Template); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*domain.Template)
		}
	}

	var r1 *errors.Error
	if rf, ok := ret.Get(1).(func() *errors.Error); ok {
		r1 = rf()
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*errors.Error)
		}
	}

	return r0, r1
}

// GetTemplate provides a mock function with given fields: id
func (_m *TemplateService) GetTemplate(id string) (*domain.Template, *errors.Error) {
	ret := _m.Called(id)

	var r0 *domain.Template
	if rf, ok := ret.Get(0).(func(string) *domain.Template); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.Template)
		}
	}

	var r1 *errors.Error
	if rf, ok := ret.Get(1).(func(string) *errors.Error); ok {
		r1 = rf(id)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*errors.Error)
		}
	}

	return r0, r1
}

// UpdateTemplate provides a mock function with given fields: newTemplate
func (_m *TemplateService) UpdateTemplate(newTemplate *domain.Template) (*domain.Template, *errors.Error) {
	ret := _m.Called(newTemplate)

	var r0 *domain.Template
	if rf, ok := ret.Get(0).(func(*domain.Template) *domain.Template); ok {
		r0 = rf(newTemplate)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.Template)
		}
	}

	var r1 *errors.Error
	if rf, ok := ret.Get(1).(func(*domain.Template) *errors.Error); ok {
		r1 = rf(newTemplate)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*errors.Error)
		}
	}

	return r0, r1
}
